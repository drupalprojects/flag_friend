<?php

/**
 * @file
 * Installs flag_friend_access.
 */

/**
 * Implements hook_install().
 */
function flag_friend_access_install() {
  drupal_set_message(st('The flag_friend_access module was successfully installed.'));
}

/**
 * Implements hook_uninstall().
 */
function flag_friend_access_uninstall() {
  drupal_set_message(st('The flag_friend_access module was successfully uninstalled.'));
}

/**
 * Implements hook_schema().
 */
function flag_friend_access_schema() {
  $schema['flag_friend_access'] = array(
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid'),
  );
  return $schema;
}

/**
 * Rename the old FFA table and create an updated table.
 */
function flag_friend_access_update_7001() {
  db_rename_table('flag_friend_access', 'flag_friend_access_old');

  $schema = array(
    'fields' => array(
      'uid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'status' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => FLAG_FRIEND_ACCESS_PUBLIC,
      ),
    ),
    'primary key' => array('nid'),
  );

  db_create_table('flag_friend_access', $schema);
}

/**
 * Insert a record for each node into the new flag_friend_access table.
 */
function flag_friend_access_update_7002() {
  // Select the nid and uid for every node.
  $select = db_select('node', 'n')->fields('n', array('nid', 'uid'));

  // Add a 0 to each result row, we'll use it for the status column later.
  $select->addExpression(FLAG_FRIEND_ACCESS_PUBLIC);

  // Insert the results into the new FFA table.
  db_insert('flag_friend_access')
    ->from($select);
}

/**
 * Update flag_friend_access.status for each row.
 */
function flag_friend_access_update_7003(&$sandbox) {
  // Get the total number of entries from the old table.
  if (!isset($sandbox['total'])) {
    $result = db_query('SELECT COUNT(*) from {flag_friend_access_old}');
    $sandbox['total'] = $result->fetchField();
    $sandbox['current'] = 0;
  }

  // Specify the total rows we want to process in this batch.
  $rows_per_pass = 25;

  // select from the old table
  $result = db_select('flag_friend_access_old')
    ->fields('ffao', array('nid', 'uid'))
    ->range(0, $rows_per_pass)
    ->execute();

  // update the new table
  foreach ($result as $row) {
    db_update('flag_friend_access')
      ->fields(array('status' => 1)) // FLAG_FRIEND_ACCESS_FRIENDS
      ->condition('nid', $row->nid)
      ->execute();

    // Increment the number of processed rows.
    $sandbox['current']++;
  }

  // Set the finished percentage value.
  $sandbox['#finished'] = empty($sandbox['total']) ? 1 : ($sandbox['current'] / $sandbox['total']);
}

/**
 *  Drop the old table.
 */
function flag_friend_access_update_7004() {
  db_drop_table('flag_friend_access_old');
}